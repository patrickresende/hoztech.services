=== GUIA DE EXECUÇÃO DO SISTEMA HOZ TECH ===

1. AMBIENTES DE EXECUÇÃO
=======================

1.1 Ambiente de Desenvolvimento
-----------------------------
Comando: python manage.py runserver
Características:
- Servidor de desenvolvimento Django
- DEBUG = True
- Recarrega automaticamente ao detectar mudanças
- Não recomendado para produção
- Apenas HTTP (sem HTTPS)
- Ideal para desenvolvimento local

1.2 Ambiente de Teste
-------------------
Comando: python scripts/run_environment.py --env test --collect-static --migrate
Características:
- Usa servidor Waitress (mais robusto)
- DEBUG = False
- Configurações similares à produção
- Apenas HTTP (sem HTTPS)
- Bom para testes de integração

1.3 Ambiente de Produção
----------------------
Comando: python scripts/run_environment.py --env prod --collect-static --migrate
Características:
- Servidor Waitress com configurações otimizadas
- DEBUG = False
- Configurações completas de produção
- Apenas HTTP (requer Nginx/Apache para HTTPS)
- Preparado para ambiente de produção

2. OPÇÕES DE CONFIGURAÇÃO
========================

2.1 Argumentos Disponíveis
------------------------
--env: Ambiente de execução (dev/test/prod)
--port: Porta do servidor (padrão: 8000)
--host: Host do servidor (padrão: 127.0.0.1)
--collect-static: Coleta arquivos estáticos
--migrate: Executa migrações do banco

2.2 Exemplos de Uso
-----------------
# Rodar em porta específica
python scripts/run_environment.py --env test --port 8080

# Rodar em host específico
python scripts/run_environment.py --env prod --host 0.0.0.0

# Rodar com todas as opções
python scripts/run_environment.py --env prod --port 8000 --host 0.0.0.0 --collect-static --migrate

3. VERIFICAÇÃO DO SISTEMA
========================

3.1 Verificador do Sistema
------------------------
Comando: python scripts/check_system.py
Funcionalidades:
- Verifica configurações do Django
- Testa conexão com banco de dados
- Verifica arquivos estáticos
- Testa URLs do sistema
- Verifica status do servidor
- Gera log detalhado (system_check.log)

4. SOLUÇÃO DE PROBLEMAS
======================

4.1 URLs Não Funcionam
--------------------
1. Execute o verificador do sistema
2. Verifique se os arquivos estáticos foram coletados
3. Confirme as permissões dos diretórios
4. Verifique as configurações de URL no urls.py

4.2 Problemas de Conexão
----------------------
1. Verifique se o servidor está rodando
2. Confirme a porta e host corretos
3. Verifique firewall e configurações de rede
4. Teste com 'localhost' ao invés de 127.0.0.1

4.3 Arquivos Estáticos
--------------------
1. Execute collectstatic
2. Verifique STATIC_ROOT e STATIC_URL
3. Confirme permissões dos diretórios
4. Verifique configuração do Whitenoise

5. NOTAS IMPORTANTES
===================

5.1 Segurança
-----------
- Nunca use DEBUG = True em produção
- Mantenha SECRET_KEY segura
- Use HTTPS em produção (via Nginx/Apache)
- Proteja endpoints sensíveis

5.2 Performance
-------------
- Use Waitress em produção
- Configure número adequado de threads
- Monitore uso de recursos
- Configure timeouts apropriados

5.3 Manutenção
------------
- Mantenha backups do banco de dados
- Monitore logs do sistema
- Atualize dependências regularmente
- Faça deploy em horários de baixo uso

=== FIM DA DOCUMENTAÇÃO === 